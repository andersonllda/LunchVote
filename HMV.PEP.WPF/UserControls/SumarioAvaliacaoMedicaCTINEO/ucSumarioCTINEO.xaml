<core:UserControlBase x:Class="HMV.PEP.WPF.UserControls.SumarioAvaliacaoMedicaCTINEO.ucSumarioCTINEO"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:core="clr-namespace:HMV.Core.Framework.WPF;assembly=HMV.Core.Framework.WPF"
             xmlns:conv="clr-namespace:HMV.Core.Framework.WPF.Converters;assembly=HMV.Core.Framework.WPF"
             xmlns:lc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol" 
             xmlns:dxd="http://schemas.devexpress.com/winfx/2008/xaml/docking"
             xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys"
             xmlns:ve="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements"
             xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
             d:DesignHeight="300" d:DesignWidth="300">

    <core:UserControlBase.Resources>
        <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <conv:BoolToOppositeVisibilityConverter x:Key="BoolToOppositeVisibilityConverter"/>
        <!-- ControlTemplate para colocar a borda nos campos obrigatorios -->
        <ControlTemplate x:Key="{dxet:ButtonEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:ButtonEdit}">
            <ContentControl x:Name="PART_Root" Template="{TemplateBinding ActualBorderTemplate}" IsTabStop="False">
                <ContentControl.Resources>
                    <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
                </ContentControl.Resources>

                <Grid x:Name="ButtonEditGrid" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <dxe:ButtonsControl x:Name="PART_LeftButtons"
                                        Grid.Column="1"
                                        ItemsSource="{TemplateBinding LeftButtons}" 
                                        Visibility="{Binding ShowEditorButtons, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <dxe:EditorControl x:Name="PART_Content" 
                                       VerticalAlignment="Stretch" 
                                       Grid.Column="2" 
                                       
                                       Template="{TemplateBinding ActualEditorControlTemplate}"/>
                    <dxe:ButtonsControl x:Name="PART_RightButtons"
                                        Grid.Column="3"
                                        ItemsSource="{TemplateBinding RightButtons}" 
                                        Visibility="{Binding ShowEditorButtons, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <Rectangle Grid.ColumnSpan="4" x:Name="ErrorBorder" RadiusX="2" RadiusY="2" StrokeThickness="2"/>
                </Grid>
            </ContentControl>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsTextEditable" Value="true"/>
                        <Condition Property="EditMode" Value="Standalone"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Template" TargetName="PART_Content" Value="{Binding Path=EditTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsTextEditable" Value="false"/>
                        <Condition Property="EditMode" Value="Standalone"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Template" TargetName="PART_Content" Value="{Binding Path=EditNonEditableTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>
                <DataTrigger Binding="{Binding Path=ValidationError.ErrorType, RelativeSource={RelativeSource Self}}" Value="Critical">
                    <Setter TargetName="ErrorBorder" Property="Stroke" Value="Red" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=ValidationError.ErrorType, RelativeSource={RelativeSource Self}}" Value="Warning">
                    <Setter TargetName="ErrorBorder" Property="Stroke" Value="Orange" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=ValidationError.ErrorType, RelativeSource={RelativeSource Self}}" Value="Information">
                    <Setter TargetName="ErrorBorder" Property="Stroke" Value="Blue" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=ValidationError.ErrorType, RelativeSource={RelativeSource Self}}" Value="Default">
                    <Setter TargetName="ErrorBorder" Property="Stroke" Value="Gray" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:TextEdit}">
            <ContentControl Template="{TemplateBinding ActualBorderTemplate}" x:Name="PART_Root" Focusable="False">
                <Grid SnapsToDevicePixels="True">
                    <dxe:EditorControl x:Name="PART_Content" Template="{TemplateBinding ActualEditorControlTemplate}" />
                    <Rectangle x:Name="ErrorBorder" RadiusX="2" RadiusY="2" StrokeThickness="2"/>
                </Grid>
            </ContentControl>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=ValidationError.ErrorType, RelativeSource={RelativeSource Self}}" Value="Critical">
                    <Setter TargetName="ErrorBorder" Property="Stroke" Value="Red" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=ValidationError.ErrorType, RelativeSource={RelativeSource Self}}" Value="Warning">
                    <Setter TargetName="ErrorBorder" Property="Stroke" Value="Orange" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=ValidationError.ErrorType, RelativeSource={RelativeSource Self}}" Value="Information">
                    <Setter TargetName="ErrorBorder" Property="Stroke" Value="Blue" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=ValidationError.ErrorType, RelativeSource={RelativeSource Self}}" Value="Default">
                    <Setter TargetName="ErrorBorder" Property="Stroke" Value="Gray" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>       
    </core:UserControlBase.Resources>

    <Grid Style="{StaticResource styleGridSite}">
        <dxd:DockLayoutManager x:Name="dockLayoutManagerN1" Margin="0,0,0,40" Background="Transparent">
            <dxd:DockLayoutManager.Resources>
                <ControlTemplate x:Key="{dxt:DocumentElementsThemeKey ResourceKey=Template}" TargetType="ve:Document">
                    <Border x:Name="border" ve:DockPane.HitTestType="Bounds" Background="{Binding Background}">
                        <ve:DocumentContentPresenter x:Name="PART_ContentPresenter" 
                                         Content="{TemplateBinding Content}" 
                                         Margin="{Binding LayoutItem.ActualPadding, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </dxd:DockLayoutManager.Resources>
        </dxd:DockLayoutManager>
        <core:HMVButton Style="{StaticResource styleBtnImprimir}" Margin="5" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="135" ButtonText="Finalizar e Imprimir" Visibility="{Binding Path=MostraFinalizar, Converter={StaticResource BoolToVisibilityConverter}}" Click="btnFinaliza_Click"/>
        <core:HMVButton Style="{StaticResource styleBtnImprimir}" Margin="5" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="{Binding Path=MostraImprimir, Converter={StaticResource BoolToVisibilityConverter}}" Click="HMVButton_Click"/>
    </Grid>
</core:UserControlBase>
